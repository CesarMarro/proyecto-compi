
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package parser;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int DIVIDE = 8;
  public static final int STRING_LITERAL = 29;
  public static final int SUM_ASIGN = 4;
  public static final int SUS_ASIGN = 3;
  public static final int CHAR_LITERAL = 28;
  public static final int CLOSE_PARE = 23;
  public static final int LESS_THAN_OR_EQUAL = 12;
  public static final int CONTINUE = 37;
  public static final int OPEN_PARE = 22;
  public static final int NOT = 24;
  public static final int SEMICOLON = 25;
  public static final int AND = 16;
  public static final int OR = 17;
  public static final int COMMA = 26;
  public static final int HEX_LITERAL = 30;
  public static final int DIFFERENT = 15;
  public static final int ASSIGN = 2;
  public static final int DOT = 27;
  public static final int ID = 33;
  public static final int EOF = 0;
  public static final int EQUAL = 14;
  public static final int error = 1;
  public static final int OPEN_BRACE = 18;
  public static final int MOD = 9;
  public static final int RESERVADAS = 35;
  public static final int CLOSE_BRACKET = 21;
  public static final int BREAK = 36;
  public static final int OPEN_BRACKET = 20;
  public static final int ERROR = 34;
  public static final int HEX_DIGIT = 32;
  public static final int SUS = 6;
  public static final int SUM = 5;
  public static final int CLOSE_BRACE = 19;
  public static final int MORE_THAN = 11;
  public static final int LESS_THAN = 10;
  public static final int MORE_THAN_OR_EQUAL = 13;
  public static final int MULTIPLICATION = 7;
  public static final int INT_LITERAL = 31;
  public static final String[] terminalNames = new String[] {
  "EOF",
  "error",
  "ASSIGN",
  "SUS_ASIGN",
  "SUM_ASIGN",
  "SUM",
  "SUS",
  "MULTIPLICATION",
  "DIVIDE",
  "MOD",
  "LESS_THAN",
  "MORE_THAN",
  "LESS_THAN_OR_EQUAL",
  "MORE_THAN_OR_EQUAL",
  "EQUAL",
  "DIFFERENT",
  "AND",
  "OR",
  "OPEN_BRACE",
  "CLOSE_BRACE",
  "OPEN_BRACKET",
  "CLOSE_BRACKET",
  "OPEN_PARE",
  "CLOSE_PARE",
  "NOT",
  "SEMICOLON",
  "COMMA",
  "DOT",
  "CHAR_LITERAL",
  "STRING_LITERAL",
  "HEX_LITERAL",
  "INT_LITERAL",
  "HEX_DIGIT",
  "ID",
  "ERROR",
  "RESERVADAS",
  "BREAK",
  "CONTINUE"
  };
}

